{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/Skylab/NowaitR/dani-final-project/client/src/components/Products/Products.jsx\";\nimport React, { useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { connect } from 'react-redux';\nimport Icon from \"@expo/vector-icons/AntDesign\";\nimport PropTypes from 'prop-types';\nimport { useNavigation, CommonActions } from '@react-navigation/native';\nimport styles from \"./ProductsStyles\";\nimport { loadProductList, loadOrderProductsList, addOrderProduct, deleteOrderProduct } from \"../../redux/actions/productsActions\";\nimport FooterNav from \"../FooterNav/FooterNav\";\nimport productQuantity from \"./productQuantity\";\n\nfunction Products(_ref) {\n  var _this = this;\n\n  var products = _ref.products,\n      orderList = _ref.orderList,\n      orderSize = _ref.orderSize,\n      dispatch = _ref.dispatch,\n      mongoUser = _ref.mongoUser;\n  var navigation = useNavigation();\n  useEffect(function () {\n    if (!products.length) {\n      console.log('loading products');\n      dispatch(loadProductList());\n      console.log(products.length);\n      console.log(mongoUser);\n      console.log(\"orderSize: \" + orderSize);\n    }\n  }, []);\n  useEffect(function () {\n    if (mongoUser.id) {\n      dispatch(loadOrderProductsList(mongoUser));\n    }\n  }, [mongoUser, orderList == null ? void 0 : orderList.length]);\n  return React.createElement(View, {\n    style: styles.body,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, products.length !== 0 && React.createElement(FlatList, {\n    ListHeaderComponent: React.createElement(View, {\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 15\n      }\n    }, React.createElement(View, {\n      style: styles.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.dispatch(CommonActions.goBack());\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 19\n      }\n    }, React.createElement(Icon, {\n      name: \"arrowleft\",\n      size: 32,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    })), React.createElement(Text, {\n      style: styles.titleText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 19\n      }\n    }, \"Bebidas\"))),\n    data: products,\n    horizontal: false,\n    keyExtractor: function keyExtractor(item, _index) {\n      return item._id;\n    },\n    numColumns: 2,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(View, {\n        style: styles.productView,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }\n      }, React.createElement(View, {\n        style: styles.imageContainer,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }\n      }, React.createElement(Image, {\n        source: {\n          uri: item.img\n        },\n        style: styles.image,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 19\n        }\n      })), React.createElement(Text, {\n        style: styles.productTitle,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }\n      }, item.name), React.createElement(Text, {\n        style: styles.price,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }\n      }, item.price.toFixed(2) + \" \\u20AC\"), React.createElement(View, {\n        style: styles.buttons,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.button,\n        onPress: function onPress() {\n          return dispatch(deleteOrderProduct(item, mongoUser));\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 19\n        }\n      }, React.createElement(Icon, {\n        color: \"#FFF\",\n        name: \"minus\",\n        size: 30,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }\n      })), React.createElement(Text, {\n        style: styles.quantity,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 19\n        }\n      }, productQuantity(item, orderList)), React.createElement(TouchableOpacity, {\n        style: styles.button,\n        onPress: function onPress() {\n          return dispatch(addOrderProduct(item, mongoUser));\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 19\n        }\n      }, React.createElement(Icon, {\n        color: \"#FFF\",\n        name: \"plus\",\n        size: 30,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }\n      }))));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  })), React.createElement(FooterNav, {\n    orderSize: orderSize,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }));\n}\n\nProducts.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  products: PropTypes.arrayOf(PropTypes.object),\n  orderList: PropTypes.arrayOf(PropTypes.object),\n  orderSize: PropTypes.number.isRequired,\n  mongoUser: PropTypes.shape({\n    id: PropTypes.string\n  })\n};\nProducts.defaultProps = {\n  products: [],\n  orderList: [],\n  mongoUser: {}\n};\n\nfunction mapStateToProps(_ref3) {\n  var productsReducer = _ref3.productsReducer,\n      orderReducer = _ref3.orderReducer,\n      authReducer = _ref3.authReducer;\n  return {\n    products: productsReducer.productsList,\n    orderList: orderReducer.orderList,\n    orderSize: orderReducer.orderSize,\n    mongoUser: authReducer.user\n  };\n}\n\nexport default connect(mapStateToProps)(Products);","map":{"version":3,"sources":["/Users/daniel/Skylab/NowaitR/dani-final-project/client/src/components/Products/Products.jsx"],"names":["React","useEffect","connect","Icon","PropTypes","useNavigation","CommonActions","styles","loadProductList","loadOrderProductsList","addOrderProduct","deleteOrderProduct","FooterNav","productQuantity","Products","products","orderList","orderSize","dispatch","mongoUser","navigation","length","console","log","id","body","container","width","title","goBack","titleText","item","_index","_id","productView","imageContainer","uri","img","image","productTitle","name","price","toFixed","buttons","button","quantity","propTypes","func","isRequired","arrayOf","object","number","shape","string","defaultProps","mapStateToProps","productsReducer","orderReducer","authReducer","productsList","user"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-this-in-sfc */\nimport React, { useEffect } from 'react';\nimport {\n  View, Text, FlatList, Image, TouchableOpacity,\n} from 'react-native';\nimport { connect } from 'react-redux';\nimport Icon from 'react-native-vector-icons/AntDesign';\nimport PropTypes from 'prop-types';\nimport { useNavigation, CommonActions } from '@react-navigation/native';\nimport styles from './ProductsStyles';\nimport {\n  loadProductList, loadOrderProductsList, addOrderProduct,\n  deleteOrderProduct,\n} from '../../redux/actions/productsActions';\nimport FooterNav from '../FooterNav/FooterNav';\nimport productQuantity from './productQuantity';\n\nfunction Products({\n  products, orderList, orderSize, dispatch, mongoUser,\n}) {\n  const navigation = useNavigation();\n\n  useEffect(\n    () => {\n      if (!products.length) {\n        console.log('loading products');\n        dispatch(loadProductList());\n        console.log(products.length);\n        console.log(mongoUser);\n        console.log(`orderSize: ${orderSize}`);\n      }\n    },\n    [],\n  );\n\n  useEffect(\n    () => {\n      if (mongoUser.id) {\n        dispatch(loadOrderProductsList(mongoUser));\n      }\n    },\n    [mongoUser, orderList?.length],\n  );\n\n  return (\n    <View style={styles.body}>\n      <View style={styles.container}>\n        {products.length !== 0 && (\n          <FlatList\n            ListHeaderComponent={(\n              <View style={{ width: '100%' }}>\n                <View style={styles.title}>\n                  <TouchableOpacity\n                    onPress={() => navigation.dispatch(CommonActions.goBack())}\n                  >\n                    <Icon\n                      name=\"arrowleft\"\n                      size={32}\n                    />\n                  </TouchableOpacity>\n                  <Text style={styles.titleText}>Bebidas</Text>\n                </View>\n              </View>\n            )}\n            data={products}\n            horizontal={false}\n            // eslint-disable-next-line no-unused-vars\n            keyExtractor={(item, _index) => item._id}\n            numColumns={2}\n            renderItem={({ item }) => (\n              <View style={styles.productView}>\n                <View style={styles.imageContainer}>\n                  <Image\n                    source={{ uri: item.img }}\n                    style={styles.image}\n                  />\n                </View>\n                <Text style={styles.productTitle}>{item.name}</Text>\n                <Text style={styles.price}>{`${item.price.toFixed(2)} €`}</Text>\n                <View style={styles.buttons}>\n                  <TouchableOpacity\n                    style={styles.button}\n                    onPress={() => dispatch(deleteOrderProduct(item, mongoUser))}\n                  >\n                    <Icon\n                      color=\"#FFF\"\n                      name=\"minus\"\n                      size={30}\n                    />\n                  </TouchableOpacity>\n                  <Text style={styles.quantity}>{productQuantity(item, orderList)}</Text>\n                  <TouchableOpacity\n                    style={styles.button}\n                    onPress={() => dispatch(addOrderProduct(item, mongoUser))}\n                  >\n                    <Icon\n                      color=\"#FFF\"\n                      name=\"plus\"\n                      size={30}\n                    />\n                  </TouchableOpacity>\n                </View>\n              </View>\n            )}\n          />\n        )}\n      </View>\n      <FooterNav orderSize={orderSize} />\n    </View>\n  );\n}\n\nProducts.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  products: PropTypes.arrayOf(PropTypes.object),\n  orderList: PropTypes.arrayOf(PropTypes.object),\n  orderSize: PropTypes.number.isRequired,\n  mongoUser: PropTypes.shape({ id: PropTypes.string }),\n};\n\nProducts.defaultProps = {\n  products: [],\n  orderList: [],\n  mongoUser: {},\n};\n\nfunction mapStateToProps({ productsReducer, orderReducer, authReducer }) {\n  return {\n    products: productsReducer.productsList,\n    orderList: orderReducer.orderList,\n    orderSize: orderReducer.orderSize,\n    mongoUser: authReducer.user,\n  };\n}\n\nexport default connect(mapStateToProps)(Products);\n"]},"metadata":{},"sourceType":"module"}