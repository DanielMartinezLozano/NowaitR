{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport actionTypes from \"../actions/action-types\";\nvar initialState = {};\nexport default function productsReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.LOAD_PRODUCTS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        productsList: action.productsList\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/daniel/Skylab/NowaitR/dani-final-project/client/src/redux/reducers/productsReducer.js"],"names":["actionTypes","initialState","productsReducer","state","action","type","LOAD_PRODUCTS","productsList"],"mappings":";;;;;;AACA,OAAOA,WAAP;AAEA,IAAMC,YAAY,GAAG,EAArB;AAEA,eAAe,SAASC,eAAT,GAAuD;AAAA,MAA9BC,KAA8B,uEAAtBF,YAAsB;AAAA,MAARG,MAAQ;;AACpE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKL,WAAW,CAACM,aAAjB;AACE,6CACKH,KADL;AAEEI,QAAAA,YAAY,EAAEH,MAAM,CAACG;AAFvB;;AAIF;AACE,aAAOJ,KAAP;AAPJ;AASD","sourcesContent":["/* eslint-disable default-param-last */\nimport actionTypes from '../actions/action-types';\n\nconst initialState = {};\n\nexport default function productsReducer(state = initialState, action) {\n  switch (action.type) {\n    case actionTypes.LOAD_PRODUCTS:\n      return {\n        ...state,\n        productsList: action.productsList,\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}