{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from 'axios';\nimport actionTypes from \"./action-types\";\nvar usersURL = 'http://192.168.0.34:4500/users/auth/';\nexport function addUserError(error) {\n  return {\n    error: error,\n    type: actionTypes.ADD_USER_ERROR\n  };\n}\nexport function addUserSuccess(user) {\n  return {\n    user: user,\n    type: actionTypes.ADD_USER\n  };\n}\nexport function addUser(user) {\n  return function _callee(dispatch) {\n    var newUser, newUserResponse;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            try {\n              newUser = {\n                name: user.name,\n                password: null,\n                email: user.email,\n                favs: [],\n                admin: false,\n                restaurant: null,\n                saved: [],\n                sent: [],\n                sub: user.sub\n              };\n              newUserResponse = axios.post(\"\" + usersURL + newUser.sub, newUser);\n              dispatch(addUserSuccess(newUserResponse.data));\n            } catch (error) {\n              dispatch(addUserError(error));\n            }\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n}\nexport function loadUserError(error) {\n  return {\n    error: error,\n    type: actionTypes.LOAD_USER_ERROR\n  };\n}\nexport function loadUserSuccess(user) {\n  return {\n    user: user,\n    type: actionTypes.LOAD_USER\n  };\n}\nexport function loadUser(sub) {\n  return function _callee2(dispatch) {\n    var userResponse;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(axios.get(\"\" + usersURL + sub));\n\n          case 3:\n            userResponse = _context2.sent;\n            dispatch(loadUserSuccess(userResponse.data));\n            _context2.next = 10;\n            break;\n\n          case 7:\n            _context2.prev = 7;\n            _context2.t0 = _context2[\"catch\"](0);\n            dispatch(loadUserError(_context2.t0));\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n}","map":{"version":3,"sources":["/Users/daniel/Skylab/NowaitR/dani-final-project/client/src/redux/actions/userActions.js"],"names":["axios","actionTypes","usersURL","addUserError","error","type","ADD_USER_ERROR","addUserSuccess","user","ADD_USER","addUser","dispatch","newUser","name","password","email","favs","admin","restaurant","saved","sent","sub","newUserResponse","post","data","loadUserError","LOAD_USER_ERROR","loadUserSuccess","LOAD_USER","loadUser","get","userResponse"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,WAAP;AAEA,IAAMC,QAAQ,GAAG,sCAAjB;AAEA,OAAO,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAClC,SAAO;AACLA,IAAAA,KAAK,EAALA,KADK;AAELC,IAAAA,IAAI,EAAEJ,WAAW,CAACK;AAFb,GAAP;AAID;AAED,OAAO,SAASC,cAAT,CAAwBC,IAAxB,EAA8B;AACnC,SAAO;AACLA,IAAAA,IAAI,EAAJA,IADK;AAELH,IAAAA,IAAI,EAAEJ,WAAW,CAACQ;AAFb,GAAP;AAID;AAED,OAAO,SAASC,OAAT,CAAiBF,IAAjB,EAAuB;AAC5B,SAAO,iBAAOG,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACL,gBAAI;AACIC,cAAAA,OADJ,GACc;AACdC,gBAAAA,IAAI,EAAEL,IAAI,CAACK,IADG;AAEdC,gBAAAA,QAAQ,EAAE,IAFI;AAGdC,gBAAAA,KAAK,EAAEP,IAAI,CAACO,KAHE;AAIdC,gBAAAA,IAAI,EAAE,EAJQ;AAKdC,gBAAAA,KAAK,EAAE,KALO;AAMdC,gBAAAA,UAAU,EAAE,IANE;AAOdC,gBAAAA,KAAK,EAAE,EAPO;AAQdC,gBAAAA,IAAI,EAAE,EARQ;AASdC,gBAAAA,GAAG,EAAEb,IAAI,CAACa;AATI,eADd;AAYIC,cAAAA,eAZJ,GAYsBtB,KAAK,CAACuB,IAAN,MAAcrB,QAAd,GAAyBU,OAAO,CAACS,GAAjC,EAAwCT,OAAxC,CAZtB;AAaFD,cAAAA,QAAQ,CAACJ,cAAc,CAACe,eAAe,CAACE,IAAjB,CAAf,CAAR;AACD,aAdD,CAcE,OAAOpB,KAAP,EAAc;AACdO,cAAAA,QAAQ,CAACR,YAAY,CAACC,KAAD,CAAb,CAAR;AACD;;AAjBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AAmBD;AAED,OAAO,SAASqB,aAAT,CAAuBrB,KAAvB,EAA8B;AACnC,SAAO;AACLA,IAAAA,KAAK,EAALA,KADK;AAELC,IAAAA,IAAI,EAAEJ,WAAW,CAACyB;AAFb,GAAP;AAID;AAED,OAAO,SAASC,eAAT,CAAyBnB,IAAzB,EAA+B;AACpC,SAAO;AACLA,IAAAA,IAAI,EAAJA,IADK;AAELH,IAAAA,IAAI,EAAEJ,WAAW,CAAC2B;AAFb,GAAP;AAID;AAED,OAAO,SAASC,QAAT,CAAkBR,GAAlB,EAAuB;AAC5B,SAAO,kBAAOV,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEwBX,KAAK,CAAC8B,GAAN,MAAa5B,QAAb,GAAwBmB,GAAxB,CAFxB;;AAAA;AAEGU,YAAAA,YAFH;AAGHpB,YAAAA,QAAQ,CAACgB,eAAe,CAACI,YAAY,CAACP,IAAd,CAAhB,CAAR;AAHG;AAAA;;AAAA;AAAA;AAAA;AAKHb,YAAAA,QAAQ,CAACc,aAAa,cAAd,CAAR;;AALG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AAQD","sourcesContent":["import axios from 'axios';\n// import firebase from 'firebase';\nimport actionTypes from './action-types';\n\nconst usersURL = 'http://192.168.0.34:4500/users/auth/';\n\nexport function addUserError(error) {\n  return {\n    error,\n    type: actionTypes.ADD_USER_ERROR,\n  };\n}\n\nexport function addUserSuccess(user) {\n  return {\n    user,\n    type: actionTypes.ADD_USER,\n  };\n}\n\nexport function addUser(user) {\n  return async (dispatch) => {\n    try {\n      const newUser = {\n        name: user.name,\n        password: null,\n        email: user.email,\n        favs: [],\n        admin: false,\n        restaurant: null,\n        saved: [],\n        sent: [],\n        sub: user.sub,\n      };\n      const newUserResponse = axios.post(`${usersURL}${newUser.sub}`, newUser);\n      dispatch(addUserSuccess(newUserResponse.data));\n    } catch (error) {\n      dispatch(addUserError(error));\n    }\n  };\n}\n\nexport function loadUserError(error) {\n  return {\n    error,\n    type: actionTypes.LOAD_USER_ERROR,\n  };\n}\n\nexport function loadUserSuccess(user) {\n  return {\n    user,\n    type: actionTypes.LOAD_USER,\n  };\n}\n\nexport function loadUser(sub) {\n  return async (dispatch) => {\n    try {\n      const userResponse = await axios.get(`${usersURL}${sub}`);\n      dispatch(loadUserSuccess(userResponse.data));\n    } catch (error) {\n      dispatch(loadUserError(error));\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}