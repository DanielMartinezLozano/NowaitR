{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/Skylab/NowaitR/dani-final-project/client/src/components/Login/Login.jsx\";\nimport React, { useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport * as Google from 'expo-google-app-auth';\nimport firebase from 'firebase';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport styles from \"./LoginStyles\";\nimport { loginGoogle, sendUser } from \"../../redux/actions/userActions\";\n\nfunction Login(_ref) {\n  var dispatch = _ref.dispatch,\n      navigation = _ref.navigation,\n      mongoUser = _ref.mongoUser;\n\n  function handleLoginClick() {\n    dispatch(loginGoogle());\n  }\n\n  useEffect(function () {\n    if (mongoUser.id) {\n      console.log(mongoUser);\n      navigation.navigate('categories');\n    }\n  }, [mongoUser]);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, React.createElement(TouchableHighlight, {\n    onPress: function onPress() {\n      return handleLoginClick();\n    },\n    style: styles.button,\n    underlayColor: \"rgba(82, 133, 236, 0.2)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.buttonView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    style: {\n      width: 30,\n      height: 30\n    },\n    source: {\n      uri: 'https://trello-attachments.s3.amazonaws.com/5fc4dc9893cb2246bcf25278/5fc4e2ccad234f1c1cdcdb7a/cbf19173201d9dafdbdec9e359245fdb/icons8-google-240.png'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }), React.createElement(Text, {\n    style: styles.buttonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, \"Inicia Sesi\\xF3n con Google\"))));\n}\n\nLogin.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  navigation: PropTypes.shape({\n    navigate: PropTypes.func.isRequired\n  }).isRequired,\n  mongoUser: PropTypes.shape({\n    id: PropTypes.string,\n    name: PropTypes.string,\n    email: PropTypes.string\n  })\n};\nLogin.defaultProps = {\n  mongoUser: {}\n};\n\nfunction mapStateToProps(_ref2) {\n  var authReducer = _ref2.authReducer;\n  return {\n    mongoUser: authReducer.user\n  };\n}\n\nexport default connect(mapStateToProps)(Login);","map":{"version":3,"sources":["/Users/daniel/Skylab/NowaitR/dani-final-project/client/src/components/Login/Login.jsx"],"names":["React","useEffect","Google","firebase","connect","PropTypes","styles","loginGoogle","sendUser","Login","dispatch","navigation","mongoUser","handleLoginClick","id","console","log","navigate","container","button","buttonView","width","height","uri","buttonText","propTypes","func","isRequired","shape","string","name","email","defaultProps","mapStateToProps","authReducer","user"],"mappings":";AAGA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;AAIA,OAAO,KAAKC,MAAZ,MAAwB,sBAAxB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP;AACA,SAASC,WAAT,EAAsBC,QAAtB;;AAEA,SAASC,KAAT,OAAoD;AAAA,MAAnCC,QAAmC,QAAnCA,QAAmC;AAAA,MAAzBC,UAAyB,QAAzBA,UAAyB;AAAA,MAAbC,SAAa,QAAbA,SAAa;;AAClD,WAASC,gBAAT,GAA4B;AAC1BH,IAAAA,QAAQ,CAACH,WAAW,EAAZ,CAAR;AACD;;AAEDN,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIW,SAAS,CAACE,EAAd,EAAkB;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,SAAZ;AACAD,MAAAA,UAAU,CAACM,QAAX,CAAoB,YAApB;AACD;AACF,GALQ,EAKN,CAACL,SAAD,CALM,CAAT;AAOA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEN,MAAM,CAACY,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,kBAAD;AACE,IAAA,OAAO,EAAE;AAAA,aAAML,gBAAgB,EAAtB;AAAA,KADX;AAEE,IAAA,KAAK,EAAEP,MAAM,CAACa,MAFhB;AAGE,IAAA,aAAa,EAAC,yBAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEb,MAAM,CAACc,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE,EAAT;AAAaC,MAAAA,MAAM,EAAE;AAArB,KADT;AAEE,IAAA,MAAM,EAAE;AAAEC,MAAAA,GAAG,EAAE;AAAP,KAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAKE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEjB,MAAM,CAACkB,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCALF,CALF,CADF,CADF;AAiBD;;AAEDf,KAAK,CAACgB,SAAN,GAAkB;AAChBf,EAAAA,QAAQ,EAAEL,SAAS,CAACqB,IAAV,CAAeC,UADT;AAEhBhB,EAAAA,UAAU,EAAEN,SAAS,CAACuB,KAAV,CAAgB;AAC1BX,IAAAA,QAAQ,EAAEZ,SAAS,CAACqB,IAAV,CAAeC;AADC,GAAhB,EAETA,UAJa;AAKhBf,EAAAA,SAAS,EAAEP,SAAS,CAACuB,KAAV,CAAgB;AACzBd,IAAAA,EAAE,EAAET,SAAS,CAACwB,MADW;AAEzBC,IAAAA,IAAI,EAAEzB,SAAS,CAACwB,MAFS;AAGzBE,IAAAA,KAAK,EAAE1B,SAAS,CAACwB;AAHQ,GAAhB;AALK,CAAlB;AAYApB,KAAK,CAACuB,YAAN,GAAqB;AACnBpB,EAAAA,SAAS,EAAE;AADQ,CAArB;;AAIA,SAASqB,eAAT,QAA0C;AAAA,MAAfC,WAAe,SAAfA,WAAe;AACxC,SAAO;AACLtB,IAAAA,SAAS,EAAEsB,WAAW,CAACC;AADlB,GAAP;AAGD;;AAED,eAAe/B,OAAO,CAAC6B,eAAD,CAAP,CAAyBxB,KAAzB,CAAf","sourcesContent":["/* eslint-disable camelcase */\n/* eslint-disable no-shadow */\n/* eslint-disable no-unused-vars */\nimport React, { useEffect } from 'react';\nimport {\n  View, Text, TouchableHighlight, Image,\n} from 'react-native';\nimport * as Google from 'expo-google-app-auth';\nimport firebase from 'firebase';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport styles from './LoginStyles';\nimport { loginGoogle, sendUser } from '../../redux/actions/userActions';\n\nfunction Login({ dispatch, navigation, mongoUser }) {\n  function handleLoginClick() {\n    dispatch(loginGoogle());\n  }\n\n  useEffect(() => {\n    if (mongoUser.id) {\n      console.log(mongoUser);\n      navigation.navigate('categories');\n    }\n  }, [mongoUser]);\n\n  return (\n    <View style={styles.container}>\n      <TouchableHighlight\n        onPress={() => handleLoginClick()}\n        style={styles.button}\n        underlayColor=\"rgba(82, 133, 236, 0.2)\"\n      >\n        <View style={styles.buttonView}>\n          <Image\n            style={{ width: 30, height: 30 }}\n            source={{ uri: 'https://trello-attachments.s3.amazonaws.com/5fc4dc9893cb2246bcf25278/5fc4e2ccad234f1c1cdcdb7a/cbf19173201d9dafdbdec9e359245fdb/icons8-google-240.png' }}\n          />\n          <Text style={styles.buttonText}>Inicia Sesi√≥n con Google</Text>\n        </View>\n      </TouchableHighlight>\n    </View>\n  );\n}\n\nLogin.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  navigation: PropTypes.shape({\n    navigate: PropTypes.func.isRequired,\n  }).isRequired,\n  mongoUser: PropTypes.shape({\n    id: PropTypes.string,\n    name: PropTypes.string,\n    email: PropTypes.string,\n  }),\n};\n\nLogin.defaultProps = {\n  mongoUser: {},\n};\n\nfunction mapStateToProps({ authReducer }) {\n  return {\n    mongoUser: authReducer.user,\n  };\n}\n\nexport default connect(mapStateToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}