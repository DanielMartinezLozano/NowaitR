{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/Skylab/NowaitR/dani-final-project/client/src/components/Loading/Loading.jsx\";\nimport { View } from 'native-base';\nimport React, { useEffect } from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport PropTypes from 'prop-types';\nimport firebase from 'firebase';\nimport { useIsFocused } from '@react-navigation/native';\nimport { connect } from 'react-redux';\nimport styles from \"./LoadingStyles\";\nimport { loadUser } from \"../../redux/actions/userActions\";\nimport stylesType from \"../../../styles/stylesType\";\n\nfunction Loading(_ref) {\n  var dispatch = _ref.dispatch,\n      navigation = _ref.navigation;\n\n  function checkIfLoggedIn() {\n    firebase.auth().onAuthStateChanged(function (user) {\n      if (user) {\n        dispatch(loadUser(user.providerData[0].uid));\n        setTimeout(function () {\n          navigation.navigate('products');\n        }, 3000);\n      } else {\n        navigation.navigate('login');\n      }\n    });\n  }\n\n  var isFocused = useIsFocused();\n  useEffect(function () {\n    checkIfLoggedIn();\n  }, [isFocused]);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, React.createElement(Image, {\n    style: {\n      width: 200,\n      height: 200\n    },\n    source: {\n      uri: 'https://trello-attachments.s3.amazonaws.com/5fc4dc9893cb2246bcf25278/5fc4dc9993cb2246bcf252be/479fe5a5cde1e0c1b6574732a83e4023/nowaitr-logo.png'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }), React.createElement(ActivityIndicator, {\n    size: \"large\",\n    color: stylesType.brown,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }));\n}\n\nLoading.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  navigation: PropTypes.shape({\n    navigate: PropTypes.func.isRequired\n  }).isRequired,\n  mongoUser: PropTypes.shape({})\n};\nLoading.defaultProps = {\n  mongoUser: {}\n};\n\nfunction mapStateToProps(_ref2) {\n  var authReducer = _ref2.authReducer;\n  return {\n    mongoUser: authReducer.user\n  };\n}\n\nexport default connect(mapStateToProps)(Loading);","map":{"version":3,"sources":["/Users/daniel/Skylab/NowaitR/dani-final-project/client/src/components/Loading/Loading.jsx"],"names":["View","React","useEffect","PropTypes","firebase","useIsFocused","connect","styles","loadUser","stylesType","Loading","dispatch","navigation","checkIfLoggedIn","auth","onAuthStateChanged","user","providerData","uid","setTimeout","navigate","isFocused","container","width","height","uri","brown","propTypes","func","isRequired","shape","mongoUser","defaultProps","mapStateToProps","authReducer"],"mappings":";AACA,SAASA,IAAT,QAAqB,aAArB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP;AACA,SAASC,QAAT;AACA,OAAOC,UAAP;;AAEA,SAASC,OAAT,OAA2C;AAAA,MAAxBC,QAAwB,QAAxBA,QAAwB;AAAA,MAAdC,UAAc,QAAdA,UAAc;;AACzC,WAASC,eAAT,GAA2B;AACzBT,IAAAA,QAAQ,CAACU,IAAT,GAAgBC,kBAAhB,CAAmC,UAACC,IAAD,EAAU;AAC3C,UAAIA,IAAJ,EAAU;AACRL,QAAAA,QAAQ,CAACH,QAAQ,CAACQ,IAAI,CAACC,YAAL,CAAkB,CAAlB,EAAqBC,GAAtB,CAAT,CAAR;AACAC,QAAAA,UAAU,CAAC,YAAM;AAAEP,UAAAA,UAAU,CAACQ,QAAX,CAAoB,UAApB;AAAkC,SAA3C,EAA6C,IAA7C,CAAV;AACD,OAHD,MAGO;AACLR,QAAAA,UAAU,CAACQ,QAAX,CAAoB,OAApB;AACD;AACF,KAPD;AAQD;;AAED,MAAMC,SAAS,GAAGhB,YAAY,EAA9B;AACAH,EAAAA,SAAS,CAAC,YAAM;AACdW,IAAAA,eAAe;AAChB,GAFQ,EAEN,CAACQ,SAAD,CAFM,CAAT;AAIA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEd,MAAM,CAACe,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE,GAAT;AAAcC,MAAAA,MAAM,EAAE;AAAtB,KADT;AAEE,IAAA,MAAM,EAAE;AAAEC,MAAAA,GAAG,EAAE;AAAP,KAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAKE,oBAAC,iBAAD;AAAmB,IAAA,IAAI,EAAC,OAAxB;AAAgC,IAAA,KAAK,EAAEhB,UAAU,CAACiB,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF;AASD;;AAEDhB,OAAO,CAACiB,SAAR,GAAoB;AAClBhB,EAAAA,QAAQ,EAAER,SAAS,CAACyB,IAAV,CAAeC,UADP;AAElBjB,EAAAA,UAAU,EAAET,SAAS,CAAC2B,KAAV,CAAgB;AAC1BV,IAAAA,QAAQ,EAAEjB,SAAS,CAACyB,IAAV,CAAeC;AADC,GAAhB,EAETA,UAJe;AAKlBE,EAAAA,SAAS,EAAE5B,SAAS,CAAC2B,KAAV,CAAgB,EAAhB;AALO,CAApB;AAQApB,OAAO,CAACsB,YAAR,GAAuB;AACrBD,EAAAA,SAAS,EAAE;AADU,CAAvB;;AAIA,SAASE,eAAT,QAA0C;AAAA,MAAfC,WAAe,SAAfA,WAAe;AACxC,SAAO;AACLH,IAAAA,SAAS,EAAEG,WAAW,CAAClB;AADlB,GAAP;AAGD;;AAED,eAAeV,OAAO,CAAC2B,eAAD,CAAP,CAAyBvB,OAAzB,CAAf","sourcesContent":["/* eslint-disable react/destructuring-assignment */\nimport { View } from 'native-base';\nimport React, { useEffect } from 'react';\nimport { ActivityIndicator, Image } from 'react-native';\nimport PropTypes from 'prop-types';\nimport firebase from 'firebase';\nimport { useIsFocused } from '@react-navigation/native';\nimport { connect } from 'react-redux';\nimport styles from './LoadingStyles';\nimport { loadUser } from '../../redux/actions/userActions';\nimport stylesType from '../../../styles/stylesType';\n\nfunction Loading({ dispatch, navigation }) {\n  function checkIfLoggedIn() {\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        dispatch(loadUser(user.providerData[0].uid));\n        setTimeout(() => { navigation.navigate('products'); }, 3000);\n      } else {\n        navigation.navigate('login');\n      }\n    });\n  }\n\n  const isFocused = useIsFocused();\n  useEffect(() => {\n    checkIfLoggedIn();\n  }, [isFocused]);\n\n  return (\n    <View style={styles.container}>\n      <Image\n        style={{ width: 200, height: 200 }}\n        source={{ uri: 'https://trello-attachments.s3.amazonaws.com/5fc4dc9893cb2246bcf25278/5fc4dc9993cb2246bcf252be/479fe5a5cde1e0c1b6574732a83e4023/nowaitr-logo.png' }}\n      />\n      <ActivityIndicator size=\"large\" color={stylesType.brown} />\n    </View>\n  );\n}\n\nLoading.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  navigation: PropTypes.shape({\n    navigate: PropTypes.func.isRequired,\n  }).isRequired,\n  mongoUser: PropTypes.shape({}),\n};\n\nLoading.defaultProps = {\n  mongoUser: {},\n};\n\nfunction mapStateToProps({ authReducer }) {\n  return {\n    mongoUser: authReducer.user,\n  };\n}\n\nexport default connect(mapStateToProps)(Loading);\n"]},"metadata":{},"sourceType":"module"}